{"version":3,"sources":["index.module.css","ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js","ContactForm/ContactForm.module.css","ContactList/ContactList.module.css","Filter/Filter.module.css"],"names":["module","exports","ContactForm","addContact","uniqueName","useState","name","setName","number","setNumber","console","log","validator","alert","onSubmit","e","preventDefault","id","uuidv4","className","s","ContactForm__container","htmlFor","type","ContactForm__input","pattern","title","required","value","onChange","target","ContactList__add__button","ContactList","contacts","onDeleteContact","ContactList__list","map","ContactList__list__item","ContactList__delete__button","onClick","Filter","filter","fragment","Contact__finder","placeholder","App","setContacts","setFilter","useEffect","storagedContacts","localStorage","getItem","JSON","parse","setItem","stringify","visibleContacts","contact","toLowerCase","includes","container","prevState","isExistContact","find","isExistNumber","contactId","cont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1490ed25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__1KQ0f\"};","import {useState} from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css'\r\n\r\nconst ContactForm = ({ addContact, uniqueName }) => {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValidated = validator()\r\n        if (!isValidated) return\r\n\r\n        addContact({ id: uuidv4(), name, number })\r\n\r\n        \r\n        setName('');\r\n        setNumber('');\r\n    }\r\n    console.log(name, number);\r\n\r\n    const validator = () => {\r\n        // const { name, number } = state\r\n        // const { uniqueName } = props\r\n        \r\n        if (!name || !number) {\r\n            alert('Не все поля заполнен')\r\n            return false\r\n        };\r\n\r\n        return uniqueName(name, number);\r\n    };\r\n\r\n\r\n    return (\r\n            <div>\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className={s.ContactForm__container}\r\n                >\r\n                    <p>Name</p>\r\n                    <label htmlFor=\"\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className={s.ContactForm__input}\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={e=>setName(e.target.value)}\r\n                            id={uuidv4()}\r\n                        />\r\n                    </label>\r\n        \r\n                    <p>Number</p>\r\n                    <label htmlFor=\"\">\r\n                        <input\r\n                            type=\"tel\"\r\n                            className={s.ContactForm__input}\r\n                            name=\"number\"\r\n                            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={e=>setNumber(e.target.value)}\r\n                            id={uuidv4()}\r\n                        />\r\n                    </label>\r\n      \r\n                    <button\r\n                        type=\"submit\"\r\n                        className={s.ContactList__add__button}\r\n                    >Add contact</button>\r\n                </form>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n// class ContactForm extends Component {\r\n//     state = { ...INITIAL_STATE };\r\n\r\n//     handleChange = e => {\r\n//         const { name, value } = e.currentTarget;\r\n\r\n//         this.setState({ [name]: value });\r\n//     };\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n\r\n//         const { name, number } = this.state\r\n//         const { addContact } = this.props\r\n        \r\n//         const isValidated = this.validator()\r\n//         if (!isValidated) return\r\n\r\n//         console.log(`\r\n//         name: ${name}\r\n//         number: ${number}\r\n//         `);\r\n\r\n//         addContact({ id: uuidv4(), name, number })\r\n        \r\n//         this.reset();\r\n//     };\r\n\r\n//     validator = () => {\r\n//         const { name, number } = this.state\r\n//         const { uniqueName } = this.props\r\n        \r\n//         if (!name || !number) {\r\n//             alert('Не все поля заполнен')\r\n//             return false\r\n//         }\r\n\r\n//         return uniqueName(name)\r\n//     };\r\n\r\n\r\n//   reset = () => {\r\n//     this.setState({ ...INITIAL_STATE });\r\n//   };\r\n \r\n//     render() {\r\n//         const { name, number} = this.state;\r\n\r\n//         return (\r\n//             <div>\r\n//                 <form\r\n//                     onSubmit={this.handleSubmit}\r\n//                     className={s.ContactForm__container}\r\n//                 >\r\n//                     <p>Name</p>\r\n//                     <label htmlFor=\"\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className={s.ContactForm__input}\r\n//                             name=\"name\"\r\n//                             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//                             required\r\n//                             value={name}\r\n//                             onChange={this.handleChange}\r\n//                             id={uuidv4()}\r\n//                         />\r\n//                     </label>\r\n        \r\n//                     <p>Number</p>\r\n//                     <label htmlFor=\"\">\r\n//                         <input\r\n//                             type=\"tel\"\r\n//                             className={s.ContactForm__input}\r\n//                             name=\"number\"\r\n//                             pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n//                             title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n//                             required\r\n//                             value={number}\r\n//                             onChange={this.handleChange}\r\n//                             id={uuidv4()}\r\n//                         />\r\n//                     </label>\r\n      \r\n//                     <button\r\n//                         type=\"submit\"\r\n//                         className={s.ContactList__add__button}\r\n//                     >Add contact</button>\r\n//                 </form>\r\n//             </div>\r\n//         );\r\n//     };\r\n// }\r\n\r\n// export default ContactForm;","import s from './ContactList.module.css'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n\r\n    <ul className={s.ContactList__list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li\r\n                key={uuidv4()}\r\n                className={s.ContactList__list__item}>\r\n                <p>{name}: {number}</p>\r\n                <button\r\n                    className={s.ContactList__delete__button}\r\n                    onClick={() => onDeleteContact(id)}>\r\n                    Delete\r\n                </button>\r\n\r\n            </li>\r\n        ))}     \r\n    </ul>\r\n);\r\n\r\nexport default ContactList;","import s from './Filter.module.css'\r\n\r\nconst Filter = ({ filter, onChange })=>{\r\n    return (\r\n        <div className={s.fragment}>\r\n            <label htmlFor=\"\">\r\n                <input\r\n                    type=\"text\"\r\n                    className={s.Contact__finder}\r\n                    name=\"filter\"\r\n                    placeholder=\"Search\"\r\n                    value={filter}\r\n                    onChange={({ target })=>onChange(target.value)}/>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\nimport s from './index.module.css'\n// import { v4 as uuidv4 } from 'uuid';\n  \nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n   useEffect(() => {\n    const storagedContacts = localStorage.getItem('userContacts');\n    if (storagedContacts) {\n      setContacts(JSON.parse(storagedContacts));\n    }\n  }, []);\n    \n  useEffect(() => {\n    localStorage.setItem('userContacts', JSON.stringify(contacts));\n  }, [contacts]);\n  \n  const deleteCoontact = (contactId) => {\n    setContacts.filter(cont => cont.id !== contactId.id)\n  };\n\n  const handleAddContact = addContact => {\n    setContacts(prevState => [...prevState, addContact]);\n  };\n  console.log(contacts)\n\n  const handleCheckUniqueContact = (name, number) => {\n    const isExistContact = !!contacts.find((contacts) => contacts.name === name);\n    const isExistNumber = !!contacts.find((contacts) => contacts.number === number);\n    isExistContact && alert('Contact is already exist');\n    isExistNumber && alert('Number is already exist');\n\n    return !isExistContact \n   };\n  \n  const handleChangeFilter = filter => {\n    setFilter(filter);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n        <div className={s.container}>\n          <h1>Number Book</h1>\n          <ContactForm\n            contacts={contacts}\n            addContact={handleAddContact}\n            uniqueName={handleCheckUniqueContact}         \n          />\n          <h2>Contacts</h2>\n          <Filter\n            filter={filter}\n            onChange={handleChangeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={deleteCoontact}\n          />\n        </div>\n  );\n};\n  \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm__container\":\"ContactForm_ContactForm__container__1gR_9\",\"ContactList__add__button\":\"ContactForm_ContactList__add__button__1kCoX\",\"ContactForm__input\":\"ContactForm_ContactForm__input__1oXTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__list\":\"ContactList_ContactList__list__3lsep\",\"ContactList__list__item\":\"ContactList_ContactList__list__item__190qo\",\"ContactList__delete__button\":\"ContactList_ContactList__delete__button__3wH1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fragment\":\"Filter_fragment__YcOVc\",\"Contact__finder\":\"Filter_Contact__finder__vg0Dw\"};"],"sourceRoot":""}